# -*- coding: utf-8 -*-
"""NLP Blog Summary with Webscrapping - Beautiful Soap.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1MNxJNjdQJQcmRpCKV6ONfFEiDaqBom7Z
"""

!pip install transformers
from transformers import pipeline
from bs4 import BeautifulSoup
import requests

summarizer = pipeline("summarization")

#URL = #"https://towardsdatascience.com/a-bayesian-take-on-model-regularization-9356116b6457"
URL = 'https://towardsdatascience.com/cracking-the-code-llms-354505c53295?source=collection_home---4------0-----------------------'

r = requests.get(URL)

soup = BeautifulSoup(r.text, 'html.parser')
results = soup.find_all(['h1', 'p'])
text = [result.text for result in results]
ARTICLE = ' '.join(text)

ARTICLE

max_chunk = 500

ARTICLE = ARTICLE.replace('.', '.<eos>')
ARTICLE = ARTICLE.replace('?', '?<eos>')
ARTICLE = ARTICLE.replace('!', '!<eos>')

sentences = ARTICLE.split('<eos>')
current_chunk = 0
chunks = []
for sentence in sentences:
    if len(chunks) == current_chunk + 1:
        if len(chunks[current_chunk]) + len(sentence.split(' ')) <= max_chunk:
            chunks[current_chunk].extend(sentence.split(' '))
        else:
            current_chunk += 1
            chunks.append(sentence.split(' '))
    else:
        print(current_chunk)
        chunks.append(sentence.split(' '))

for chunk_id in range(len(chunks)):
    chunks[chunk_id] = ' '.join(chunks[chunk_id])

len(chunks)

res = summarizer(chunks, max_length=120, min_length=30, do_sample=False)

res[0]

' '.join([summ['summary_text'] for summ in res])

text = ' '.join([summ['summary_text'] for summ in res])
text

with open('blogsummary.txt', 'w') as f:
    f.write(text)

